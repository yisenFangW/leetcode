一条包含字母 A-Z 的消息通过以下方式进行了编码：

'A' -> 1
'B' -> 2
...
'Z' -> 26
给定一个只包含数字的非空字符串，请计算解码方法的总数。

示例 1:

输入: "12"
输出: 2
解释: 它可以解码为 "AB"（1 2）或者 "L"（12）。
示例 2:

输入: "226"
输出: 3
解释: 它可以解码为 "BZ" (2 26), "VF" (22 6), 或者 "BBF" (2 2 6) 。

题解：
//1.明显用动态规划去解题（常规动态规划）
//对于dp[i],若dp[i]!='0',则dp[i] += dp[i-1];若dp[i-1] == '1',则与dp[i]必能够组成10~19的数，dp[i]+=dp[i-2];若dp[i-1] == '2',
//则dp[i]需要在0~6之间才能凑成一个数字形式。
int numDecodings(string s) {
	if (s.empty())
		return 0;
	if (s[0] == '0')
		return 0;
	if (1 == s.size())
		return 1;
	vector<int> dp(s.size()+1, 0);
	dp[0] = 1; dp[1] = 1;
	for (int i = 2; i <= s.size(); ++i) {
		(s[i - 1] == '0') ? dp[i] = 0 : dp[i] = dp[i - 1];
		if ((s[i - 1] <= '6' && s[i - 2] == '2') || (s[i - 2] == '1'))
			dp[i] += dp[i - 2];
	}
	return dp.back();
}
