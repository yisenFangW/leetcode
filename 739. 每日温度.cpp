根据每日气温列表，请重新生成一个列表，对应位置的输入是你需要再等待多久温度才会升高超过该日的天数。如果之后都不会升高，请在该位置用 0 来代替。

例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。

提示：气温列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。

题解：
//1.第一想法是暴力解，但是那样解这题意义何在，看了一下题目之后准备从后面往前解
//如果后一个元素大于前一个元素，则res[i] = 1;若后一个数字小于等于前一个，判断res[i], 若res[i] == 0说明后面没有比这个数大的
//但是T[i]已经大于T[i+1]了，所以后面肯定没有比T[i]大的数字，res[i] == 0;
//若T[i+1]<T[i]，且res[i]!=0，虽然T[i+1]小一些，但是其后面有更大的元素，所以这样往后查，感觉类似于动态规划的思想。
vector<int> dailyTemperatures(vector<int>& T) {
	vector<int> res(T.size(), 0);
	for (int i = T.size() - 2; i >= 0; --i) {
		if (T[i + 1] > T[i])
			res[i] = 1;
		else if (T[i + 1] <= T[i]) {
			if (res[i + 1] == 0)
				res[i] == 0;
			else {
				int add = res[i + 1];
				while (T[i + add] <= T[i] && res[i + add] != 0) {
					add += res[i + add];
				}
				if (T[i + add] > T[i])
					res[i] = add;
			}
		}
	}
	return res;
}
