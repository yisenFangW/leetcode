设计一个算法，找出数组中最小的k个数。以任意顺序返回这k个数均可。

示例：

输入： arr = [1,3,5,7,2,4,6,8], k = 4
输出： [1,2,3,4]
提示：

0 <= len(arr) <= 100000
0 <= k <= min(100000, len(arr))

题解：
这种题目就很适合用堆排序来写，我用的是大跟堆排序，取出k个数之后的数字放在后面，之后pop_back掉，即可返回原arr
void buildMaxHeap(int i, int n, vector<int> &vec) {
    int left = 2 * i + 1, right = 2 * i + 2, max = i;
    if (left < n && vec[left] > vec[max]) max = left;
    if (right < n && vec[right] > vec[max]) max = right;
    if (max != i) {
        swap(vec[max], vec[i]);
        buildMaxHeap(max, n, vec);
    }
}

void maxHeap(vector<int> &vec, int k) {
    for (int i = vec.size() / 2 - 1; i >= 0; --i)
        buildMaxHeap(i, vec.size(), vec);
    for (int i = vec.size() - 1; i >= k; --i) {
        swap(vec[i], vec[0]);
        buildMaxHeap(0, i, vec);
    }
}

vector<int> smallestK(vector<int> &arr, int k) {
    maxHeap(arr, k);
    int size = arr.size();
    for (int i = k; i < size; ++i)
        arr.pop_back();
    return arr;
}
